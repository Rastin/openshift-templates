{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}",
    "annotations": {
      "openshift.io/display-name": "spring boot",
      "description": "",
      "tags": "dev",
      "iconClass": "",
      "openshift.io/long-description": "This template defines resources needed to develop a spring boot application.",
      "openshift.io/provider-display-name": "Red Hat, Inc.",
      "openshift.io/documentation-url": "https://...",
      "openshift.io/support-url": "https://...",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}.",
  "labels": {
      "template": "${NAME}",
      "app": "${NAME}"
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "stringData": {
        "database-user": "${DATABASE_USER}",
        "database-password": "${DATABASE_PASSWORD}",
        "database-admin-password" : "${DATABASE_ADMIN_PASSWORD}"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "port": {
            "targetPort": "8080-tcp"
        },
        "tls": {
            "insecureEdgeTerminationPolicy": "None",
            "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
            "dockerStrategy": {
                "dockerfilePath": "Dockerfile"
            },
            "type": "Docker"
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${GENERIC_WEBHOOK_SECRET}"
            }
          }
        ],
        "postCommit": {
          "script": ""
        }
      }
    },

     {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {

      "replicas": 1,
      "revisionHistoryLimit": 10,
      "selector": {
          "deploymentconfig": "${NAME}"
      },
      "strategy": {
          "activeDeadlineSeconds": 21600,
          "resources": {},
          "rollingParams": {
              "intervalSeconds": 1,
              "maxSurge": "25%",
              "maxUnavailable": "25%",
              "timeoutSeconds": 600,
              "updatePeriodSeconds": 1
          },
          "type": "Rolling"
      },
      "template": {
          "metadata": {
              "annotations": {
                  "openshift.io/generated-by": "OpenShiftNewApp"
              },
              "creationTimestamp": null,
              "labels": {
                  "deploymentconfig": "${NAME}"
              }
          },
          "spec": {
              "replicas": 1,
              "revisionHistoryLimit": 10,
              "selector": {
                  "deploymentconfig": "${NAME}"
              },
              "strategy": {
                  "activeDeadlineSeconds": 21600,
                  "resources": {},
                  "rollingParams": {
                      "intervalSeconds": 1,
                      "maxSurge": "25%",
                      "maxUnavailable": "25%",
                      "timeoutSeconds": 600,
                      "updatePeriodSeconds": 1
                  },
                  "type": "Rolling"
              },
              "template": {
                  "metadata": {
                      "annotations": {
                          "openshift.io/generated-by": "OpenShiftNewApp"
                      },
                      "creationTimestamp": null,
                      "labels": {
                          "deploymentconfig": "${NAME}"
                      }
                  },
                  "spec": {
                      "containers": [
                          {
                              "image": "${NAME}:latest",
                              "imagePullPolicy": "Always",
                              "name": "${NAME}",
                              "resources": {},
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File"
                          }
                      ],
                      "dnsPolicy": "ClusterFirst",
                      "restartPolicy": "Always",
                      "schedulerName": "default-scheduler",
                      "securityContext": {},
                      "terminationGracePeriodSeconds": 30
                  }
              },
              "test": false,
              "triggers": [
                  {
                      "type": "ConfigChange"
                  },
                  {
                      "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                              "${NAME}"
                          ],
                          "from": {
                              "kind": "ImageStreamTag",
                              "name": "${NAME}:latest",
                              "namespace": "sb-dev-git"
                          }
                      },
                      "type": "ImageChange"
                  }
              ]

      }
    }
 ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "${NAME}"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "SPRING_BOOT_VERSION",
      "displayName": "Version of NodeJS Image",
      "description": "Version of NodeJS image to be used (10, 12, or latest).",
      "value": "1",
      "required": true
    },
    {
      "name": "MONGODB_VERSION",
      "displayName": "Version of MongoDB Image",
      "description": "Version of MongoDB image to be used (3.6 or latest).",
      "value": "3.6",
      "required": true
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://github.com/Rastin/spring-boot.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
      "value": "dev"
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository.",
      "value": "/"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "GENERIC_WEBHOOK_SECRET",
      "displayName": "Generic Webhook Secret",
      "description": "A secret string used to configure the Generic webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "MongoDB Username",
      "description": "Username for MongoDB user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "MongoDB Password",
      "description": "Password for the MongoDB user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "value": "sampledb"
    },
    {
      "name": "DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Administrator Password",
      "description": "Password for the database admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    }
  ]
}
